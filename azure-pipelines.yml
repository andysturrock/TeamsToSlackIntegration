# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

variables:
  environmentName: ''
  azureResourceGroup: 'ZNE-MSTC-N-11-ASS-VMS-RSG'

stages:
    - stage: build
      displayName: Build
      dependsOn: []
      jobs:
      - job: build
        displayName: Build Angular app
        pool:
          name: BP-Linux-AgentOS

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'
            
          - script: |
              cd client
              pwd
              ls -lrt
              npm install -g @angular/cli
            displayName: 'Install Angular'

          - script: |
              cd client
              pwd
              ls -lrt
              npm install
            displayName: 'Install dependencies'

          - script: |
              cd client
              pwd
              ls -lrt
              ng build --prod
            displayName: 'Angular build'
            

          - task: ArchiveFiles@2
            displayName: 'Create Artifact: angular'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/client/dist'
              includeRootFolder: false
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/angular.zip'
              replaceExistingArchive: true

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: angular'
            inputs:
              ArtifactName: angular

    - stage: build
      displayName: Deploy
      dependsOn: [Build]
      jobs:
      - job: deploy
        displayName: Deploy Angular app
        pool:
          name: GenericPool1

        steps:
          - task: AzureCLI@2
            displayName: 'Azure CLI - Create Blob Container'
            name: azStorage
            inputs:
              azureSubscription: 'Spoke-${{ variables.azureResourceGroup }}'
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                $accountName = $(az storage account list -g ${{ variables.azureResourceGroup }} -o json --query "[?tags.environment=='${{ variables.environmentName }}'].name | [0]").replace('"','')
                echo $accountName